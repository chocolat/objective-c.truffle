(root source.strings
    (zone comment.block.strings
        (start
            (regex /\*
                (0 punctuation.definition.comment.strings)))
        (end
            (regex \*/
                (0 punctuation.definition.comment.strings))))
    (zone string.quoted.double.strings
        (start
            (regex "
                (0 punctuation.definition.string.begin.strings)))
        (end
            (regex "
                (0 punctuation.definition.string.end.strings)))
        (subzones
            (zone constant.character.escape.strings
                (match
                    (regex [\\(\\|[abefnrtv'"?]|[0-3]\d{,2}|[4-7]\d?|x[a-zA-Z0-9]+)])))
            (zone invalid.illegal.unknown-escape.strings
                (match
                    (regex \\.)))
            (zone constant.other.placeholder.strings
                (match
                    (regex [(?x)%
						(\d+\$)?                             # field (argument #)
						[#0\- +']*                           # flags
						[,;:_]?                              # separator character (AltiVec)
						((-?\d+)|\*(-?\d+\$)?)?              # minimum field width
						(\.((-?\d+)|\*(-?\d+\$)?)?)?         # precision
						(hh|h|ll|l|j|t|z|q|L|vh|vl|v|hv|hl)? # length modifier
						[@diouxXDOUeEfFgGaACcSspn%]          # conversion type
					])))
            (zone invalid.illegal.placeholder.c
                (match %)))))